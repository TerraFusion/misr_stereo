#############################################################################
# Makefile for building: ../bin/misr-stereo
# Generated by qmake (2.01a) (Qt 4.2.1) on: Fri Jan 9 14:21:27 2009
# Project:  stereo.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake -unix -o Makefile stereo.pro
#############################################################################

# Pointer back to the MISR directory
MISRDIR := /data/gdi/b/shadow/a/misr
####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DLINUX
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W  $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/lib/qt-3.3/mkspecs/linux-g++-64 -I. -I../src -I${MISRDIR}/hdfeos/include -I../gctp -I${MISRDIR}/hdf.Linux/include -I${MISRDIR}/szip.Linux/include -I.ui
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)   -L${MISRDIR}/lib -lX11 -lXi -lXmu -lglut -lhdfeos -lgctp -L${MISRDIR}/hdf.Linux/lib -lmfhdf -ldf -L${MISRDIR}/szip.Linux/lib -lsz -ljpeg -lz -lpthread -lGLU -lGL
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/qt-3.3/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = glutaux.cpp \
		../src/hdfDataNode.cpp \
		hdfDataSource.cpp \
		hdfField.cpp \
		hdfFile.cpp \
		hdfGrid.cpp \
		help.cpp \
		main.cpp \
		stereoviewer.cpp \
		../src/stringaux.cpp \
		viewport.cpp 
OBJECTS       = .obj/glutaux.o \
		.obj/hdfDataNode.o \
		.obj/hdfDataSource.o \
		.obj/hdfField.o \
		.obj/hdfFile.o \
		.obj/hdfGrid.o \
		.obj/help.o \
		.obj/main.o \
		.obj/stereoviewer.o \
		.obj/stringaux.o \
		.obj/viewport.o
DIST          = /usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/g++.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/unix/opengl.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		stereo.pro
QMAKE_TARGET  = misr-stereo
DESTDIR       = ../bin/
TARGET        = ../bin/misr-stereo

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../bin/ || $(MKDIR) ../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: stereo.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/g++.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/unix/opengl.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf
	$(QMAKE) -unix -o Makefile stereo.pro
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/g++.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/unix/opengl.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile stereo.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/misr-stereo1.0.0 || $(MKDIR) .obj/misr-stereo1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/misr-stereo1.0.0/ && (cd `dirname .obj/misr-stereo1.0.0` && $(TAR) misr-stereo1.0.0.tar misr-stereo1.0.0 && $(COMPRESS) misr-stereo1.0.0.tar) && $(MOVE) `dirname .obj/misr-stereo1.0.0`/misr-stereo1.0.0.tar.gz . && $(DEL_FILE) -r .obj/misr-stereo1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_clean: compiler_rcc_clean compiler_uic_clean compiler_image_collection_clean 

####### Compile

.obj/glutaux.o: glutaux.cpp glutaux.h \
		vec2.h \
		../src/utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/glutaux.o glutaux.cpp

.obj/hdfDataNode.o: ../src/hdfDataNode.cpp ../src/hdfDataNode.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/utility.h \
		../src/ptr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hdfDataNode.o ../src/hdfDataNode.cpp

.obj/hdfDataSource.o: hdfDataSource.cpp hdfDataSource.h \
		../src/matrix.h \
		../src/matrix.cpp \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/utility.h \
		../src/hdfDataNode.h \
		../src/ptr.h \
		../src/hdfDataOp.h \
		hdfField.h \
		hdfFile.h \
		../src/stringaux.h \
		hdfGrid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hdfDataSource.o hdfDataSource.cpp

.obj/hdfField.o: hdfField.cpp hdfField.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/utility.h \
		../src/ptr.h \
		hdfFile.h \
		../src/stringaux.h \
		hdfGrid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hdfField.o hdfField.cpp

.obj/hdfFile.o: hdfFile.cpp hdfFile.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/utility.h \
		../src/ptr.h \
		../src/stringaux.h \
		hdfGrid.h \
		hdfField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hdfFile.o hdfFile.cpp

.obj/hdfGrid.o: hdfGrid.cpp hdfFile.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/utility.h \
		../src/ptr.h \
		../src/stringaux.h \
		hdfGrid.h \
		hdfField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hdfGrid.o hdfGrid.cpp

.obj/help.o: help.cpp help.h \
		glutaux.h \
		vec2.h \
		../src/utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/help.o help.cpp

.obj/main.o: main.cpp glutaux.h \
		vec2.h \
		../src/utility.h \
		stereoviewer.h \
		interpolator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.obj/stereoviewer.o: stereoviewer.cpp glutaux.h \
		vec2.h \
		../src/utility.h \
		help.h \
		stereoviewer.h \
		interpolator.h \
		viewport.h \
		hdfFile.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/ptr.h \
		../src/stringaux.h \
		hdfField.h \
		hdfGrid.h \
		hdfDataSource.h \
		../src/matrix.h \
		../src/matrix.cpp \
		../src/hdfDataNode.h \
		../src/hdfDataOp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/stereoviewer.o stereoviewer.cpp

.obj/stringaux.o: ../src/stringaux.cpp ../src/stringaux.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/stringaux.o ../src/stringaux.cpp

.obj/viewport.o: viewport.cpp glutaux.h \
		vec2.h \
		../src/utility.h \
		viewport.h \
		hdfFile.h \
		../src/hdfBase.h \
		../src/point.h \
		../src/polygon.h \
		../src/rect.h \
		../src/ptr.h \
		../src/stringaux.h \
		hdfField.h \
		hdfGrid.h \
		hdfDataSource.h \
		../src/matrix.h \
		../src/matrix.cpp \
		../src/hdfDataNode.h \
		../src/hdfDataOp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/viewport.o viewport.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

